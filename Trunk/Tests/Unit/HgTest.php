<?php

    require_once 'PHPUnit/Framework.php';
    require_once '../../VersionControl/Hg.php';

    /**
     * Test class for Hg.
     * Generated by PHPUnit on 2008-12-24 at 13:06:43.
     */
    class HgTest extends PHPUnit_Framework_TestCase
    {
        /**
         *
         * @var Hg
         */
        private $_object;

        public $basepath = "../Functional/";
        public $test_repository = 'V:\Development\_Webroot\Trunk\Tests\Fixtures\Test_Repository';
        public $invalid_repo = 'C:\Windows\Temp';
        public $nonexistant_path = 'C:\Temp';

        /**
         * Sets up the fixture, for example, opens a network connection.
         * This method is called before a test is executed.
         */
        protected function setUp() {}

        public function testConstructorWithNullSignature()
        {
            $hg = new VersionControl_Hg();
            $expected = NULL;
            $this->assertEquals($expected, $hg->getRepository());
        }

        public function testConstructorWithValidRepository()
        {
            $hg = new VersionControl_Hg($this->test_repository);
            $expected = $this->test_repository;
            $this->assertEquals($expected, $hg->getRepository());
        }

        public function testConstructorWithAnInvalidRepository()
        {
            try {
                $hg = new VersionControl_Hg($this->invalid_repo);
                //include $this->basepath . 'test_HgConstructor_InvalidRepository.php';
            }
            catch (Exception $e) {
                $this->assertThat(
                    $e->getMessage(),
                    $this->stringContains(
                        'there is no Mercurial repository at'//does not exist on this system
                    )
                );
                return;
            }
            $this->fail('An expected exception has not been raised.');
        }

        public function testConstructorWithANonexistantPath()
        {
            try {
                $hg = new VersionControl_Hg($this->nonexistant_path);
                //include $this->basepath . 'test_HgConstructor_NonexistantPath.php';
            }
            catch (Exception $e) {
                $this->assertThat(
                    $e->getMessage(),
                    $this->stringContains(
                        'does not exist on this system'
                    )
                );
                return;
            }
            $this->fail('An expected exception has not been raised.');
        }

        /*public function testSetVersion()
        {

        }

        public function testGetVersion()
        {
            $version = $this->_object->getVersion(); //returns an array.
            print_r($version);
            //these values will be different on other actual installations.
            $this->assertEquals( $version['raw'], '1.1+20081203');
            $this->assertEquals( $version['complete'], '1.1');
            $this->assertEquals( $version['major'], '1');
            $this->assertEquals( $version['minor'], '1');
            $this->assertEquals( $version['date'], '20081203');

        }

        public function testGetVersionWithUnrecognizableInput()
        {
            try {
                //this should raise an exception.
                $this->_object->getVersion('unknown');
            }
            catch(Exception $e) {
                return;
            }
        }*/

        /**
         * Tears down the fixture, for example, closes a network connection.
         * This method is called after a test is executed.
         */
        public function tearDown() {}

    }
